/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ClubContract;

import PDF.exportPDF;
import Socket.Client;
import System.EcoSystem;
import System.Enterprise.Club;
import System.Enterprise.Enterprise;
import System.Network.Network;
import System.Organization.Organization;
import System.Role.System.SystemFinancialAdmin;
import System.UserAccount.UserAccount;
import System.WorkRequest.EvaluateAPlayerRequest;
import System.WorkRequest.FindPlayerListRequest;
import System.WorkRequest.WorkRequest;
import System.WorkRequest.WorkRequest.WorkRequestType;
import UserInterface.BGPanel;
import UserInterface.ClubPanel;
import UserInterface.MainJFrame;
import java.awt.CardLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author victor
 */

public class ClubContractEvaluationJPanel extends ClubPanel {

    /**
     * Creates new form ClubContractEvaluationJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private Network network;
    private Enterprise enterprise;  
    private Organization organization;
    private UserAccount account;
    public ClubContractEvaluationJPanel(JPanel userProcessContainer, EcoSystem business, Network network, Enterprise enterprise, Organization organization, UserAccount account) {
    
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.network = network;
        this.organization = organization;
        this.business = business;
        this.account =account;
        initComponents();
        ShowInfo();
        populateTable();
       
        
    }
    
    public void ShowInfo(){
        labNetwork.setText(network.getName());
        labEnterprise.setText(enterprise.getName());
        labOrganization.setText(this.organization.getName());
        labUserAccount.setText(account.getUsername());
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) this.tblRequest.getModel();        
        model.setRowCount(0);
        for (WorkRequest wr : this.account.getWorkQueue().getWorkRequestList()){
        if(wr.getWorkRequestType().equals(WorkRequestType.EvaluateAPlayerRequest)||wr.getWorkRequestType().equals(WorkRequestType.FindPlayerListRequest)){
            Object[] row = new Object[4];
            row[0] = wr;
            row[1] = wr.getWorkRequestType();
            row[2] = wr.getStatus();
            row[3] = wr.getTotalprice();
            model.addRow(row);   
         }             
        }    
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        labOrganization = new javax.swing.JLabel();
        labUserAccount = new javax.swing.JLabel();
        labNetwork = new javax.swing.JLabel();
        labEnterprise = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnPlayerEvaluation = new javax.swing.JButton();
        btnFindPlyers = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequest = new javax.swing.JTable();
        btnPayExport = new javax.swing.JButton();

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setText("Enterprise:");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel4.setText("NetWork:");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel5.setText("UserAccount:");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel6.setText("Organization:");

        btnPlayerEvaluation.setText("Player Evaluation");
        btnPlayerEvaluation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayerEvaluationActionPerformed(evt);
            }
        });

        btnFindPlyers.setText("Find Players");
        btnFindPlyers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindPlyersActionPerformed(evt);
            }
        });

        tblRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request Id", "Type", "Status", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequest);

        btnPayExport.setText("Pay&Export");
        btnPayExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(48, 48, 48)
                        .addComponent(labNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7)
                        .addGap(26, 26, 26)
                        .addComponent(labEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(133, 133, 133)
                            .addComponent(btnPlayerEvaluation, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(27, 27, 27)
                            .addComponent(btnFindPlyers)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPayExport))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(16, 16, 16)
                            .addComponent(labOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(labUserAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(labNetwork, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(labEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(labOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labUserAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnPlayerEvaluation, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFindPlyers, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPayExport, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlayerEvaluationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayerEvaluationActionPerformed
        // TODO add your handling code here:
        PlayerEvalutionJPanel playerEvalutionJPanel = new PlayerEvalutionJPanel(userProcessContainer,business,network,enterprise,organization,account);
        userProcessContainer.add("playerEvalutionJPanel", playerEvalutionJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnPlayerEvaluationActionPerformed

    private void btnFindPlyersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindPlyersActionPerformed
        // TODO add your handling code here:
        FindPlayersJPanel findPlayersJPanel = new FindPlayersJPanel(userProcessContainer,business,network,enterprise,organization,account);
        userProcessContainer.add("findPlayersJPanel", findPlayersJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnFindPlyersActionPerformed

    private void btnPayExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayExportActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblRequest.getSelectedRow();       
        if (selectedRow < 0){
             JOptionPane.showMessageDialog(null, "Please selete a Work request!");
            return;         
        }       
        WorkRequest work = (WorkRequest)tblRequest.getValueAt(selectedRow, 0);
        // export work report;
        
        if(work instanceof EvaluateAPlayerRequest)
        {
            work.setStatus("Paid");
            double price = work.getTotalprice();
            // club contract need to reduce money
            Club club = (Club)this.enterprise;
            int clubOldRevenue = (int)club.getRevenue();
            int clubNewRevenue = (int)(clubOldRevenue - price);
            club.setRevenue(clubNewRevenue);
            // Evaluation enterprise need to add money
            int evaOldRevenue = (int)work.getFirstReceiver().getPersonRevenue();
            int evaNewRevenue = (int)(evaOldRevenue+price);
            work.getFirstReceiver().setPersonRevenue(evaNewRevenue);
            // system finiacial need to add money
            for(UserAccount ua : this.business.getUserAccountDirectory().getUserAccountList()){
                if(ua.getRole() instanceof SystemFinancialAdmin){
                    ua.getWorkQueue().getWorkRequestList().add(work);
                    int sysOldRevenue = (int)ua.getPersonRevenue();
                    int sysNewRevenue = (int)(sysOldRevenue+(price*0.1));
                    ua.setPersonRevenue(sysNewRevenue);
                    
                }
            }
            EvaluateAPlayerRequest eva = (EvaluateAPlayerRequest)work;
             System.out.println("Here is the workRequest"+((EvaluateAPlayerRequest)work).getReport().getAge());
            String path=null;

         JFileChooser File= new JFileChooser();
         File.setFileSelectionMode(JFileChooser.FILES_ONLY);
         int i=File.showOpenDialog(null);
         if(i == File.APPROVE_OPTION){
             path=File.getSelectedFile().getAbsolutePath();
             String name=File.getSelectedFile().getName();            
             System.out.println("The path of current file"+path+"\nthe current file name"+name);
         }
         else{
             System.out.println("no File choosen");
         }
         System.out.println("Here is the eva"+((EvaluateAPlayerRequest) work).getReport());            
         exportPDF.fillAPlayerEvaluation((EvaluateAPlayerRequest)work, path);
        
             
        }
         populateTable();
        if(work instanceof FindPlayerListRequest){
             work.setStatus("Paid");
             double price = work.getTotalprice();
            // club contract need to reduce money
            Club club = (Club)this.enterprise;
            int clubOldRevenue = (int)club.getRevenue();
            int clubNewRevenue = (int)(clubOldRevenue - price);
            // Evaluation enterprise need to add money
            int evaOldRevenue = (int)work.getFirstReceiver().getPersonRevenue();
            int evaNewRevenue = (int)(evaOldRevenue+price);
            work.getFirstReceiver().setPersonRevenue(evaNewRevenue);
            // system finiacial need to add money
            for(UserAccount ua : this.business.getUserAccountDirectory().getUserAccountList()){
                if(ua.getRole() instanceof SystemFinancialAdmin){
                    ua.getWorkQueue().getWorkRequestList().add(work);
                    int sysOldRevenue = (int)ua.getPersonRevenue();
                    int sysNewRevenue = (int)(sysOldRevenue+(price*0.1));
                    ua.setPersonRevenue(sysNewRevenue);
                    
                }
            }
            FindPlayerListRequest eva = (FindPlayerListRequest)work;
            String path=null;

         JFileChooser File= new JFileChooser();
         File.setFileSelectionMode(JFileChooser.FILES_ONLY);
         int i=File.showOpenDialog(null);
         if(i == File.APPROVE_OPTION){
             path=File.getSelectedFile().getAbsolutePath();
             String name=File.getSelectedFile().getName();
             
             System.out.println("The path of current file"+path+"\nthe current file name"+name);}
         
         
         
             
         exportPDF.fillPlayersEvaluation((FindPlayerListRequest)work, path);
                   
        }
        
        
         populateTable();
    }//GEN-LAST:event_btnPayExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFindPlyers;
    private javax.swing.JButton btnPayExport;
    private javax.swing.JButton btnPlayerEvaluation;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labEnterprise;
    private javax.swing.JLabel labNetwork;
    private javax.swing.JLabel labOrganization;
    private javax.swing.JLabel labUserAccount;
    private javax.swing.JTable tblRequest;
    // End of variables declaration//GEN-END:variables
}
